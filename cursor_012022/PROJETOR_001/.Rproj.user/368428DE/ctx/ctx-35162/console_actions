{
    "type": [
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "> ",
        "library(tidyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "df=read.csv(\"turma.csv\" , sep= \";\")",
        "> ",
        "#criando um dataframe",
        "> ",
        "",
        "> ",
        "funcionario <- c('Joao', 'Jose', 'Maria')",
        "> ",
        "salario <- c(1000,2000,3000)",
        "> ",
        "aniversario <- as.Date(c('2000-01-1','2008-4-26','2007-5-27'))",
        "> ",
        "dados.funcionarios <- data.frame (funcionario,salario,aniversario)",
        "> ",
        "view(dados.funcionarios)",
        "Error in view(dados.funcionarios) : \n  não foi possível encontrar a função \"view\"\n",
        "> ",
        "dados.funcionarios$funcionario",
        "[1] \"Joao\"  \"Jose\"  \"Maria\"\n",
        "> ",
        "dados.funcionarios$salario",
        "[1] 1000 2000 3000\n",
        "> ",
        "dados.funcionarios$aniversario",
        "[1] \"2000-01-01\" \"2008-04-26\" \"2007-05-27\"\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#importando um arquivo",
        "> ",
        "",
        "> ",
        "#carregando bibliotecas de funcoes",
        "> ",
        "install.packages(\"tidyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages('dplyr', repos = 'https://cloud.r-project.org')",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "",
        "> ",
        "setRepositories()",
        "--- Please select repositories for use in this session ---\n\n\n1: + CRAN\n2:   BioC software\n3:   BioC annotation\n4:   BioC experiment\n5:   CRAN (extras)\n6:   R-Forge\n7:   rforge.net\n\nEnter one or more numbers separated by spaces and then ENTER, or 0 to cancel\n",
        "1: ",
        "",
        "> ",
        "library(\"tidyverse\")",
        "\u001B[37m── \u001B[1mAttaching packages\u001B[22m ───────────────────────────────────────────────── tidyverse 1.3.1 ──\u001B[39m\n",
        "\u001B[37m\u001B[32m✓\u001B[37m \u001B[34mggplot2\u001B[37m 3.3.5     \u001B[32m✓\u001B[37m \u001B[34mpurrr  \u001B[37m 0.3.4\n\u001B[32m✓\u001B[37m \u001B[34mtibble \u001B[37m 3.1.6     \u001B[32m✓\u001B[37m \u001B[34mstringr\u001B[37m 1.4.0\n\u001B[32m✓\u001B[37m \u001B[34mreadr  \u001B[37m 2.1.1     \u001B[32m✓\u001B[37m \u001B[34mforcats\u001B[37m 0.5.1\u001B[39m\n",
        "\u001B[37m── \u001B[1mConflicts\u001B[22m ──────────────────────────────────────────────────── tidyverse_conflicts() ──\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mfilter()\u001B[37m masks \u001B[34mstats\u001B[37m::filter()\n\u001B[31mx\u001B[37m \u001B[34mdplyr\u001B[37m::\u001B[32mlag()\u001B[37m    masks \u001B[34mstats\u001B[37m::lag()\u001B[39m\n",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tidyr)",
        "> ",
        "",
        "> ",
        "df = read.csv(\"turma.csv\", sep= \";\")",
        "> ",
        "df",
        "         nome sexo idade salario  graduacao      pais\n1        Joao    M    56       9 Engenharia   Espanha\n2       Maria    F    48      12   Nutricao Argentina\n3        Jose    M    23      14   Nutricao    Brasil\n4       Paulo    M    18      16   Medicina    Brasil\n5    Cristina    F    55       7 Engenharia   Espanha\n6        Olga    F    48       3 Computacao    Italia\n7       Ana K    F    44       2   Medicina    Brasil\n8      Analia    F    60       8 Engenharia Argentina\n9      Teresa    F    29      25",
        " Computacao   Espanha\n10        Ana    F    18      19 Engenharia    Italia\n11    Gustavo    M    19      13 Computacao    Brasil\n12  Gertrudes    F    22      28 Engenharia    Italia\n13       Kika    F    37      12   Medicina   Espanha\n14        Ana    F    44       3  Pedagogia Argentina\n15     Bianca    F    29       2 Engenharia    Italia\n16      Telma    F    48       1  Pedagogia    Brasil\n17        Bia    F    23      30   Nutricao Argentina\n18      Tulio    M    51      14  Pedagogia   Espanha\n19 Maria Jose",
        "    F    18       7 Computacao    Brasil\n20      Gigio    M    10      20 Engenharia    Italia\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#RESUMO ",
        "> ",
        "#SELECT: seleciona colunas",
        "> ",
        "#eh usada com: contains, starts_with, ends_with, num_range, one_of, matches",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "df1= select(df,nome,pais)",
        "> ",
        "df2= select(df,contains(\"o\"))",
        "> ",
        "df3= select(df,starts_with(\"gr\"))",
        "> ",
        "df4= select(df,ends_with(\"io\"))",
        "> ",
        "df5= select(df,1:3)",
        "> ",
        "df6= select(df,c(1,3,5))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#RENAME : muda o nome de colunas",
        "> ",
        "# Atencao: rename (df,new_name = old_name)",
        "> ",
        "df7= rename(df, pessoa = nome)",
        "> ",
        "#da para selecionar e renomear ao mesmo tempo",
        "> ",
        "df8= select(df,country= pais)",
        "> ",
        "#da para selecionar tudo e renomear alguns, ao mesmo tempo",
        "> ",
        "df9=  select(df, country= pais, everything ())",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#MUTATE: cria novas colunas, que podem ser combinacoes ",
        "> ",
        "#           de colunas existentes, ou calculo envolvendo colunas",
        "> ",
        "#pode criar uma coluna ",
        "> ",
        "",
        "> ",
        "df10= mutate(df, ano.nascimento= 2021-idade)",
        "> ",
        "#pode criar varias colunas",
        "> ",
        "df11= mutate(df,ano.nascimento= 2021-idade,media.idades=mean(idade))",
        "> ",
        "nota= c(5,2,3,8,5,6,6,8,3,10,1,4,3,6,5,7,7,9,10,10)",
        "> ",
        "media_da_turma= mean(nota)",
        "> ",
        "df12= mutate(df,nota, media_da_turma)",
        "> ",
        "",
        "> ",
        "View(df12)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#TRANSMUTE: cria novas colunas, joga as demais colunas fora",
        "> ",
        "df13= transmute (df,nome, ano.nascimento= 2021-idade)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#FILTER : para manipular linhas, criar nova tabela",
        "> ",
        "#algum criterio",
        "> ",
        "#pode usar<.>,>=,<=, %in%, |, &, !, is.na(), !is.na()",
        "> ",
        "df14= filter(df,nome =='Joao') #2 = é para verificação",
        "> ",
        "df15= filter(df, nome =='Joao' | nome == \"Maria\") # | é ou",
        "> ",
        "df16= filter(df, idade >= 56)",
        "> ",
        "df17= filter(df,idade >= 18 & salario > 10)",
        "> ",
        "df18= filter(df,sexo == \"F\")",
        "> ",
        "",
        "> ",
        "#SLICE: separa um conjunto de linhas, baseado na posicao",
        "> ",
        "df19= slice(df,1:5)",
        "> ",
        "df20= slice(df, c(1,3,5,7,9))",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#ARRANGE: ordem crescente ou decrescente",
        "> ",
        "df21 = arrange(df,idade)",
        "> ",
        "df22 = arrange(df, desc(idade))",
        "> ",
        "",
        "> ",
        "#pode ordenar mais de um, pela sequencia",
        "> ",
        "df23 = arrange(df, nome, idade)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#DISTINCT: remove as linhas duplicadas",
        "> ",
        "#Vamos duplicar uma tres linhas",
        "> ",
        "#Vamos usar a função slice",
        "> ",
        "tres.linhas = slice(df,1:3)",
        "> ",
        "",
        "> ",
        "#agora vamos juntar ao df",
        "> ",
        "duplicado= bind_rows(df, tres.linhas)",
        "> ",
        "duplicado= arrange(duplicado,nome)",
        "> ",
        "",
        "> ",
        "#removendo as linhas duplicadas",
        "> ",
        "df_limpo= distinct(duplicado)",
        "> ",
        "",
        "> ",
        "#segundo exemplo",
        "> ",
        "df24= select(df,graduacao, pais)",
        "> ",
        "df24= arrange(df24, graduacao)",
        "> ",
        "df25= distinct(df24)",
        "> ",
        "",
        "> ",
        "set.seed(1234)",
        "> ",
        "#SAMPLE_N",
        "> ",
        "df26= sample_n(df,4)",
        "> ",
        "#percentual, no caso 10%",
        "> ",
        "df27= sample_frac(df,0.1)",
        "> ",
        "#amostragem sem reposicao",
        "> ",
        "df28= sample_n(df,4,replace = F)",
        "> ",
        "#amostragem com reposicao",
        "> ",
        "df29= sample_n(df,10,replace = T)",
        "> ",
        "",
        "> ",
        "#SUMMARISE: aplica funcoes na colunas e cria tabela com sumario",
        "> ",
        "#combina com min(), max(), mean(), sd(), var(), n(), etc",
        "> ",
        "",
        "> ",
        "df30= summarise(df, mean(idade))",
        "> ",
        "df31= summarise(df, mean(idade), min(salario))",
        "> ",
        "df32= summarise(df, rows = n()) #calcula numero de linhas",
        "> ",
        "df33= summarise(df,n()) #mesmo do anterior calcula numero de linhas",
        "> ",
        "",
        "> ",
        "#Calculando o número de elementos distintos em uma coluna de um dataframe ( função \"n_distinct\")",
        "> ",
        "",
        "> ",
        "#N_DISTINCT: numero de elementos diferentes",
        "> ",
        "n_distinct(df)",
        "[1] 20\n",
        "> ",
        "n_distinct(df$graduacao) #<= determinada coluna dentro do dataframe",
        "[1] 5\n",
        "> ",
        "n_distinct(df$sexo)",
        "[1] 2\n",
        "> ",
        "n_distinct(df$pais)",
        "[1] 4\n",
        "> ",
        "",
        "> ",
        "#Separando dataframe em grupo e realizando cálculos com os grupos ( funções \"group_by\" e \"summarise\")",
        "> ",
        "#GROUP_BY + SUMMARISE",
        "> ",
        "df38= group_by(df,sexo)",
        "> ",
        "df38",
        "\u001B[38;5;246m# A tibble: 20 × 6\u001B[39m\n\u001B[38;5;246m# Groups:   sexo [2]\u001B[39m\n   nome       sexo  idade salario graduacao  pais     \n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \n\u001B[38;5;250m 1\u001B[39m Joao       M        56       9 Engenharia Espanha  \n\u001B[38;5;250m 2\u001B[39m Maria      F        48      12 Nutricao   Argentina\n\u001B[38;5;250m 3\u001B[39m Jose       M        23      14 Nutricao   Brasil   \n",
        "\u001B[38;5;250m 4\u001B[39m Paulo      M        18      16 Medicina   Brasil   \n\u001B[38;5;250m 5\u001B[39m Cristina   F        55       7 Engenharia Espanha  \n\u001B[38;5;250m 6\u001B[39m Olga       F        48       3 Computacao Italia   \n\u001B[38;5;250m 7\u001B[39m Ana K      F        44       2 Medicina   Brasil   \n\u001B[38;5;250m 8\u001B[39m Analia     F        60       8 Engenharia Argentina\n\u001B[38;5;250m 9\u001B[39m Teresa     F        29      25 Computacao Espanha  \n\u001B[38;5;250m10\u001B[39m Ana        F        18      19 Engenharia Italia   \n\u001B[38;5;250m11\u001B[39m Gustavo    M        19      13 Computacao Brasil   \n",
        "\u001B[38;5;250m12\u001B[39m Gertrudes  F        22      28 Engenharia Italia   \n\u001B[38;5;250m13\u001B[39m Kika       F        37      12 Medicina   Espanha  \n\u001B[38;5;250m14\u001B[39m Ana        F        44       3 Pedagogia  Argentina\n\u001B[38;5;250m15\u001B[39m Bianca     F        29       2 Engenharia Italia   \n\u001B[38;5;250m16\u001B[39m Telma      F        48       1 Pedagogia  Brasil   \n\u001B[38;5;250m17\u001B[39m Bia        F        23      30 Nutricao   Argentina\n\u001B[38;5;250m18\u001B[39m Tulio      M        51      14 Pedagogia  Espanha  \n\u001B[38;5;250m19\u001B[39m Maria Jose F        18       7 Computacao Brasil   \n",
        "\u001B[38;5;250m20\u001B[39m Gigio      M        10      20 Engenharia Italia   \n",
        "> ",
        "df38= summarise(df, n_distinct(graduacao))",
        "> ",
        "df39= summarise(df38, max(idade),min(idade), max(salario),min(salario))",
        "Erro: Problem with `summarise()` input `..1`.\n\u001B[34mℹ\u001B[39m `..1 = max(idade)`.\n\u001B[31mx\u001B[39m objeto 'idade' não encontrado\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n",
        "> ",
        "",
        "> ",
        "df40 =group_by(df, pais)",
        "> ",
        "df41 = summarise(df40,max(salario), min(salario))",
        "> ",
        "",
        "> ",
        "df40 =group_by(df,graduacao, pais)",
        "> ",
        "df40",
        "\u001B[38;5;246m# A tibble: 20 × 6\u001B[39m\n\u001B[38;5;246m# Groups:   graduacao, pais [13]\u001B[39m\n   nome       sexo  idade salario graduacao  pais     \n   \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<int>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m      \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m    \n\u001B[38;5;250m 1\u001B[39m Joao       M        56       9 Engenharia Espanha  \n\u001B[38;5;250m 2\u001B[39m Maria      F        48      12 Nutricao   Argentina\n\u001B[38;5;250m 3\u001B[39m Jose       M        23      14 Nutricao   Brasil   \n",
        "\u001B[38;5;250m 4\u001B[39m Paulo      M        18      16 Medicina   Brasil   \n\u001B[38;5;250m 5\u001B[39m Cristina   F        55       7 Engenharia Espanha  \n\u001B[38;5;250m 6\u001B[39m Olga       F        48       3 Computacao Italia   \n\u001B[38;5;250m 7\u001B[39m Ana K      F        44       2 Medicina   Brasil   \n\u001B[38;5;250m 8\u001B[39m Analia     F        60       8 Engenharia Argentina\n\u001B[38;5;250m 9\u001B[39m Teresa     F        29      25 Computacao Espanha  \n\u001B[38;5;250m10\u001B[39m Ana        F        18      19 Engenharia Italia   \n\u001B[38;5;250m11\u001B[39m Gustavo    M        19      13 Computacao Brasil   \n",
        "\u001B[38;5;250m12\u001B[39m Gertrudes  F        22      28 Engenharia Italia   \n\u001B[38;5;250m13\u001B[39m Kika       F        37      12 Medicina   Espanha  \n\u001B[38;5;250m14\u001B[39m Ana        F        44       3 Pedagogia  Argentina\n\u001B[38;5;250m15\u001B[39m Bianca     F        29       2 Engenharia Italia   \n\u001B[38;5;250m16\u001B[39m Telma      F        48       1 Pedagogia  Brasil   \n\u001B[38;5;250m17\u001B[39m Bia        F        23      30 Nutricao   Argentina\n\u001B[38;5;250m18\u001B[39m Tulio      M        51      14 Pedagogia  Espanha  \n\u001B[38;5;250m19\u001B[39m Maria Jose F        18       7 Computacao Brasil   \n",
        "\u001B[38;5;250m20\u001B[39m Gigio      M        10      20 Engenharia Italia   \n",
        "> ",
        "df433 = summarise(df40,max(salario), min(salario))",
        "`summarise()` has grouped output by 'graduacao'. You can override using the `.groups` argument.\n",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "#Contando o número de elementos distintos em cada coluna ( função \"count\", pacote \"dplyr\")",
        "> ",
        "#COUNT:conta linhas",
        "> ",
        "df42= count(df,sexo)",
        "> ",
        "df43= count(df,graduacao)",
        "> ",
        "df44= count(df,pais)",
        "> ",
        "df45= count(df,nome)",
        "\nRestarting R session...\n\n"
    ]
}